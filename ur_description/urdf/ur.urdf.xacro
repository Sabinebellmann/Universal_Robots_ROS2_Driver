<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$(arg name)">
   <!-- robot name parameter -->
   <xacro:arg name="name" default="ur"/>
   <!-- import main macro -->
   <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>

   <!-- parameters -->
   <xacro:arg name="prefix" default="" />
   <xacro:arg name="joint_limit_params" default=""/>
   <xacro:arg name="kinematics_params" default=""/>
   <xacro:arg name="physical_params" default=""/>
   <xacro:arg name="visual_params" default=""/>
   <xacro:arg name="transmission_hw_interface" default=""/>
   <xacro:arg name="safety_limits" default="false"/>
   <xacro:arg name="safety_pos_margin" default="0.15"/>
   <xacro:arg name="safety_k_position" default="20"/>
   <xacro:arg name="sim_gazebo" default="false" />
   <xacro:arg name="sim_ignition" default="false" />
   <xacro:arg name="simulation_controllers" default="" />
   <xacro:arg name="joint_to_parent" default="false" />
   <xacro:arg name="create_link_world" default="false" />
   <xacro:arg name="parent" default="world" />
   <xacro:arg name="xyz" default="0 0 0" />
   <xacro:arg name="rpy" default="0 0 0" />

   <!-- ros2_control related parameters -->
   <xacro:arg name="use_fake_hardware" default="false" />
   <xacro:arg name="fake_sensor_commands" default="false" />

   <!-- initial position -->
   <xacro:arg name="initial_positions_file" default="$(find ur_description)/config/initial_positions.yaml"/>
   <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)"/>

   <xacro:if value="$(arg create_link_world)">
     <!-- create link fixed to the "world" -->
     <link name="world" />
   </xacro:if>
   <!-- arm -->
   <xacro:ur_robot
     prefix="$(arg prefix)"
     joint_to_parent="$(arg joint_to_parent)"
     parent="$(arg parent)"
     joint_limits_parameters_file="$(arg joint_limit_params)"
     kinematics_parameters_file="$(arg kinematics_params)"
     physical_parameters_file="$(arg physical_params)"
     visual_parameters_file="$(arg visual_params)"
     transmission_hw_interface="$(arg transmission_hw_interface)"
     safety_limits="$(arg safety_limits)"
     safety_pos_margin="$(arg safety_pos_margin)"
     safety_k_position="$(arg safety_k_position)"
     use_fake_hardware="$(arg use_fake_hardware)"
     fake_sensor_commands="$(arg fake_sensor_commands)"
     initial_positions="${load_yaml(initial_positions_file)}"
     sim_gazebo="$(arg sim_gazebo)"
     sim_ignition="$(arg sim_ignition)"
     xyz="$(arg xyz)" rpy="$(arg rpy)" > <!-- position robot in the world; only used when joint_to_parent=true -->
     <!-- <origin xyz="$(arg xyz)" rpy="$(arg rpy)" />    -->
   </xacro:ur_robot>


    <xacro:if value="$(arg sim_gazebo)">
      <!-- Gazebo plugins -->
      <gazebo reference="world">
      </gazebo>
      <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
          <parameters>$(arg simulation_controllers)</parameters>
        </plugin>
      </gazebo>
    </xacro:if>

    <xacro:if value="$(arg sim_ignition)">
      <!-- Gazebo plugins -->
      <gazebo reference="world">
      </gazebo>
      <gazebo>
        <plugin filename="libign_ros2_control-system.so" name="ign_ros2_control::IgnitionROS2ControlPlugin">
          <parameters>$(arg simulation_controllers)</parameters>
          <controller_manager_node_name>$(arg prefix)controller_manager</controller_manager_node_name>
        </plugin>
      </gazebo>
    </xacro:if>



</robot>
